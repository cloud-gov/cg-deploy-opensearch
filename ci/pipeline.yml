---
jobs:

- name: set-self
  plan:
    - get: deploy-logs-opensearch-config
      trigger: true
    - set_pipeline: self
      file: deploy-logs-opensearch-config/ci/pipeline.yml

- name: build-opensearch-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: opensearch-release-git-repo
      trigger: true
    - get: pipeline-tasks
    - get: final-builds-dir-tarball
      resource: opensearch-final-builds-dir-tarball
    - get: releases-dir-tarball
      resource: opensearch-releases-dir-tarball
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: ((ecr_aws_key))
          aws_secret_access_key: ((ecr_aws_secret))
          repository: harden-concourse-task
          aws_region: us-gov-west-1
          semver_constraint: ">= 1.0.0"
      inputs:
      - name: release-git-repo
      run:
        path: sh
        args:
        - -exc
        - |
          cd release-git-repo
          bundle install
          # run release template unit tests
          bundle exec rspec
  - task: finalize-release
    file: pipeline-tasks/finalize-bosh-release.yml
    tags: [iaas]
    params:
      PRIVATE_YML_CONTENT: |-
        ---
        blobstore:
          options:
            region: ((s3-bosh-blobstore-info.region))
            bucket_name: ((s3-bosh-blobstore-info.bucket_name))
            credentials_source: ((s3-bosh-blobstore-info.credentials_source))
            server_side_encryption: ((s3-bosh-blobstore-info.server_side_encryption))
  - in_parallel:
    - put: opensearch-release
      tags: [iaas]
      params:
        file: finalized-release/opensearch-*.tgz
    - put: opensearch-final-builds-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/final-builds-dir-opensearch.tgz
    - put: opensearch-releases-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/releases-dir-opensearch.tgz

- name: deploy-opensearch-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: deploy-logs-opensearch-config
      trigger: true
      passed: [set-self]
    - get: opensearch-release
      trigger: true
    - get: opensearch-stemcell-jammy
      trigger: true
  - task: opensearch-manifest
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: ((ecr_aws_key))
          aws_secret_access_key: ((ecr_aws_secret))
          repository: harden-concourse-task
          aws_region: us-gov-west-1
          tag: ((harden-concourse-task-tag))
      inputs:
      - name: deploy-logs-opensearch-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=deploy-logs-opensearch-config spruce merge \
            deploy-logs-opensearch-config/opensearch-deployment.yml \
            deploy-logs-opensearch-config/opensearch-jobs.yml \
            deploy-logs-opensearch-config/opensearch-development.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-development))
        CF_PASSWORD: ((cf-password-development))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  - put: opensearch-development-deployment
    params:
      manifest: opensearch-manifest/manifest.yml
      releases:
      - opensearch-release/*.tgz
      stemcells:
      - opensearch-stemcell-jammy/*.tgz
      ops_files:
      - deploy-logs-opensearch-config/opsfiles/nats-tls-dev.yml
      - deploy-logs-opensearch-config/opsfiles/enable-node-tls.yml
  on_failure:
    put: slack
    params: &slack-params
      text: |
        :x: FAILED to deploy logs-opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-failure-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-success-channel))
      text: |
        :white_check_mark: Successfully deployed logs-opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>


resources:
- name: opensearch-release-git-repo
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloud-gov/opensearch-boshrelease
    branch: main

- name: opensearch-final-builds-dir-tarball
  type: s3-iam
  source: &bosh-releases-bucket-info
    bucket: ((s3-bosh-releases-bucket))
    region_name: ((aws-region))
    server_side_encryption: AES256
    versioned_file: final-builds-dir-opensearch.tgz

- name: opensearch-releases-dir-tarball
  type: s3-iam
  source:
    <<: *bosh-releases-bucket-info
    versioned_file: releases-dir-opensearch.tgz

- name: opensearch-release
  type: s3-iam
  source:
    bucket: ((s3-bosh-releases-bucket))
    region_name: ((aws-region))
    regexp: opensearch-([\d\.]*).tgz
    server_side_encryption: AES256

- name: deploy-logs-opensearch-config
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloud-gov/cg-deploy-opensearch.git
    branch: main

- name: opensearch-stemcell-jammy
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
  type: bosh-io-stemcell

- name: pipeline-tasks
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
    branch: main

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: opensearch-development-deployment
  type: bosh-deployment
  source: &bosh-params-development
    target: ((bosh-director-info.development.environment))
    client: ((bosh-director-info.development.client))
    client_secret: ((bosh-director-info.development.client_secret))
    ca_cert: ((bosh-director-info.development.ca_cert))
    deployment: logs-opensearch

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
